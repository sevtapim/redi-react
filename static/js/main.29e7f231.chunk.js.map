{"version":3,"sources":["Loading.js","QueryParams.js","Sankey.js","config.js","SankeyContainer.js","utils.js","App.js","index.js"],"names":["Loading","style","backgroundColor","position","top","left","width","height","zIndex","fontFamily","fontSize","Form","styled","form","Space","div","Spacespan","span","QueryParams","year","years","country","countries","shouldFilter","onQueryChange","htmlFor","name","id","value","onChange","map","iso3","type","checked","Sankey","data","colors","nodeThickness","margin","right","bottom","align","IDMC_COUNTRY_YEAR_DATA_URL","ALL_COUNTRY_MARKER","SankeyDiv","SankeyContainer","props","fetchData","a","fetch","resp","json","results","Promise","resolve","setState","cache","shouldRefreshData","setComponentData","filterByCountry","isValidData","item","undefined","new_displacements","hazard_category","filter","state","newState","isDataEmpty","length","loading","prevProps","prevState","this","replaceIdsWithSpaces","hideLeaves","prepareData","React","Component","nodes","links","keys","substr","indexOf","spaceCount","key","count","hasOwnProperty","getSpaceCount","newId","repeat","source","target","newSource","newTarget","string","test","dataIn","hazard_sub_category","hazard_type","hazard_sub_type","categories","obj","sub_categories","accumulate","types","sub_types","increment","sub","newCount","label","push","getNodesandLinksDeeper","prefix","prefixNew","label1","label2","getNodesandLinks","getCountriesYears","url","response","result","console","log","getUniqueYears","Set","getUniqueCountries","uniqueIso3s","forEach","Object","values","Main","main","App","useState","query","setQuery","isLoading","setIsLoading","initialize","sort","b","geo_name","useEffect","className","prevQuery","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sPA4BeA,EA1BC,kBACd,qBACEC,MAAO,CACLC,gBAAiB,2BACjBC,SAAU,QACVC,IAAK,IACLC,KAAM,IACNC,MAAO,OACPC,OAAQ,OACRC,OAAQ,MARZ,SAWE,qBACEP,MAAO,CACLE,SAAU,WACVC,IAAK,MACLC,KAAM,MACNI,WAAY,OACZC,SAAU,OANd,2BCXEC,EAAOC,IAAOC,KAAV,kGAMJC,EAAQF,IAAOG,IAAV,kDAGLC,EAAYJ,IAAOK,KAAV,iDAmDAC,EA/CK,SAAC,GAAD,IAClBC,EADkB,EAClBA,KACAC,EAFkB,EAElBA,MACAC,EAHkB,EAGlBA,QACAC,EAJkB,EAIlBA,UACAC,EALkB,EAKlBA,aACAC,EANkB,EAMlBA,cANkB,OAQlB,eAACb,EAAD,WACI,wBAAOc,QAAQ,OAAf,iBAEE,cAACT,EAAD,IACA,wBAAQU,KAAK,OAAOC,GAAG,OAAOC,MAAOT,EAAMU,SAAUL,EAArD,SACGJ,EAAMU,KAAI,SAAAX,GAAI,OACb,wBAAmBS,MAAOT,EAA1B,SACGA,GADUA,WAMrB,cAACL,EAAD,IACE,wBAAOW,QAAQ,UAAf,oBAEE,cAACT,EAAD,IACA,wBAAQU,KAAK,UAAUC,GAAG,UAAUC,MAAOP,EAASQ,SAAUL,EAA9D,SACGF,EAAUQ,KAAI,SAAAT,GAAO,OACpB,wBAA2BO,MAAOP,EAAQU,KAA1C,SACGV,EAAQK,MADEL,EAAQU,cAM7B,cAACjB,EAAD,IACE,wBAAOW,QAAQ,eAAf,2BAEE,cAACT,EAAD,IACA,uBACEU,KAAK,eACLC,GAAG,eACHK,KAAK,WACLC,QAASV,EACTM,SAAUL,W,gDCvCLU,EAfA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACb,cAAC,IAAD,CACEA,KAAMA,EACNC,OAAQ,CAAC,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,WACvHC,cAAc,IACdC,OAAQ,CACNlC,IAAK,GACLmC,MAAO,GACPC,OAAQ,GACRnC,KAAM,IAERoC,MAAM,aCbGC,EAA6B,8DAI7BC,EAAqB,CAACZ,KAAM,MAAOL,KAAM,OCMhDkB,EAAYhC,IAAOG,IAAV,kHAMM8B,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAuBRC,UAxBmB,sBAwBP,gCAAAC,EAAA,sEACSC,ODxC4B9B,ECyCV,EAAK2B,MAAM3B,KDzCF,UAAauB,EAAb,iBAAgDvB,KCuCpF,cACJ+B,EADI,gBAIgBA,EAAKC,OAJrB,uBAIFC,EAJE,EAIFA,QAJE,SAKJ,IAAIC,SAAQ,SAAAC,GAChB,EAAKC,SAAS,CAAEC,MAAOJ,EAASK,mBAAmB,GAAQH,MANnD,iCDvCoC,IAACnC,ICuCrC,OAxBO,EAkCnBuC,iBAlCmB,sBAkCA,qBAmBRC,EAQAC,EA3BQ,SAAAZ,EAAA,6DA2BRY,EA3BQ,SA2BIC,GAInB,YAC6BC,IAA3BD,EAAKE,mBACsB,IAA3BF,EAAKE,wBACoBD,IAAzBD,EAAKG,iBAfAL,EAnBQ,SAmBQxB,EAAMd,GAC7B,OAAOc,EAAK8B,QAEZ,SAAmBJ,GACjB,OAAOA,EAAK9B,OAASV,MAjBzBc,GALIA,EACF,EAAKW,MAAMzB,UAAYsB,EAAmBZ,KACtC4B,EAAgB,EAAKO,MAAMV,MAAO,EAAKV,MAAMzB,SAC7C,EAAK6C,MAAMV,OAELS,OAAOL,GAEbO,EAAW,CACfC,YAA6B,IAAhBjC,EAAKkC,OAClBZ,mBAAmB,EACnBa,SAAS,EACTnC,QAZe,SAeX,IAAIkB,SAAQ,SAAAC,GAChB,EAAKC,SAASY,EAAUb,MAhBT,2CAhCjB,EAAKY,MAAQ,CACXI,SAAS,EACTF,aAAa,EACbX,mBAAmB,EACnBD,MAAO,GACPrB,KAAM,IAER,EAAKY,YATY,E,6FAYnB,WAAyBwB,EAAWC,GAApC,SAAAxB,EAAA,yDACMuB,EAAUpD,OAASsD,KAAK3B,MAAM3B,KADpC,gCAEUsD,KAAK1B,YAFf,WAKI0B,KAAKP,MAAMT,mBACXc,EAAUlD,UAAYoD,KAAK3B,MAAMzB,QANrC,gCAQUoD,KAAKf,mBARf,gD,6EA6DA,WACE,OAAIe,KAAKP,MAAMI,QACN,cAAC,EAAD,IAELG,KAAKP,MAAME,YAEX,oGAMF,cAACxB,EAAD,UACE,cAAC,EAAD,CACET,KAAMuC,EACJC,EACAC,EAAYH,KAAKP,MAAM/B,MACvBsC,KAAK3B,MAAMvB,uB,GA3FsBsD,IAAMC,WAmGnD,SAASJ,EAAT,GAA+C,IAAhBK,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MAChCC,EAAO,GACPzB,EAAQ,GAIZ,MAAO,CAACuB,MAHOA,EAAMjD,KAKrB,SAAmB+B,GACjB,IAAIlC,EAAKkC,EAAI,GACTnC,EAAOC,EAAGuD,OAAOvD,EAAGwD,QAAQ,KAAO,GACnCC,EAMN,SAAuBC,EAAKJ,GAC1B,IAAIK,EAAQL,EAAKM,eAAeF,GAAOJ,EAAKI,GAAO,EAAI,EAEvD,OADAJ,EAAKI,GAAOC,EACLA,EATUE,CAAc9D,EAAMuD,GACjCQ,EAAQ,IAAIC,OAAON,GAAc1D,EAErC,OADA8B,EAAM7B,GAAM8D,EACL,CAAC,GAAMA,MARST,MAFVA,EAAMlD,KAmBrB,SAAoB+B,GAClB,IAAK8B,EAAyB9B,EAAzB8B,OAAQC,EAAiB/B,EAAjB+B,OAAQhE,EAASiC,EAATjC,MACjBiE,EAAYrC,EAAMmC,GAClBG,EAAYtC,EAAMoC,GACtB,MAAO,CAACD,OAAQE,EAAWD,OAAQE,EAAWlE,aAIlD,SAAS+C,EAAWxC,EAAMZ,GACxB,IAAKA,EACH,OAAOY,EAGT,IAAQ4C,EAAiB5C,EAAjB4C,MAAOC,EAAU7C,EAAV6C,MACf,MAAO,CAAED,MAAOA,EAAMd,QAEtB,SAAoBJ,GAElB,IAAMkC,EAASlC,EAAKlC,GAEpB,OADgB,kBACAqE,KAAKD,MANmBf,MAAOA,EAAMf,QASvD,SAAoBJ,GAElB,IAAMkC,EAASlC,EAAK+B,OAEpB,OADgB,kBACAI,KAAKD,OAIzB,SAASnB,EAAYqB,GACnB,IAAM9D,EAAO8D,EAAOnE,KAEpB,SAA4B+B,GAC1B,MAAO,CACLG,gBAAiBH,EAAKG,gBACtBkC,oBAAqBrC,EAAKqC,oBAC1BC,YAAatC,EAAKsC,YAClBC,gBAAiBvC,EAAKuC,gBACtBrC,kBAAmBF,EAAKE,sBAI5B,IAb2B,EAarBsC,EAAa,GAbQ,cAeXlE,GAfW,IAe3B,2BAAsB,CAAC,IAAdmE,EAAa,QAChBC,EAAiBC,EACnBH,EACAC,EAAItC,gBACJsC,EAAIvC,mBAGF0C,EAAQD,EACVD,EACAD,EAAIJ,oBACJI,EAAIvC,mBAGF2C,EAAYF,EAAWC,EAAOH,EAAIH,YAAaG,EAAIvC,wBAE3BD,IAAxBwC,EAAIF,iBACNI,EAAWE,EAAWJ,EAAIF,gBAAiBE,EAAIvC,oBA/BxB,8BAmC3B,SAASyC,EAAW1E,EAAKuD,EAAKsB,GAC5B,MAAqB7E,EAAIyD,eAAeF,GACpCvD,EAAIuD,GACJ,CAAEC,MAAO,EAAGsB,IAAK,IAFftB,EAAN,EAAMA,MAAOsB,EAAb,EAAaA,IAGTC,EAAWvB,EAAQqB,EAEvB,OADA7E,EAAIuD,GAAO,CAAEC,MAAOuB,EAAUD,OACvBA,EAKT,IAAM7B,EAAQ,GACRC,EAAQ,GA+Bd,OA5BA,SAA0BlD,EAAKiD,EAAOC,GACpC,IAAIM,EAAQ,EACZ,IAAK,IAAID,KAAOvD,EAAK,CACnB,IAAIgF,EAAK,UAAMxB,EAAN,YAAeD,GACxBN,EAAMgC,KAAK,CAAEpF,GAAImF,IACjBE,EAAuB1B,EAAOD,EAAKvD,EAAIuD,GAAKuB,IAAK7B,EAAOC,GACxDM,IAEF,SAAS0B,EAAuBC,EAAQ7G,EAAK0B,EAAKiD,EAAOC,GACvD,IAAIM,EAAQ,EACZ,IAAK,IAAID,KAAOvD,EAAK,CACnB,IAAIoF,EAAYD,EAAS,IAAM3B,EAC3BwB,EAAK,UAAMI,EAAN,YAAmB7B,GAC5BN,EAAMgC,KAAK,CAAEpF,GAAImF,IAEjB,IAAIK,EAAM,UAAMF,EAAN,YAAgB7G,GACtBgH,EAAM,UAAMF,EAAN,YAAmB7B,GAC7BL,EAAM+B,KAAK,CACTpB,OAAQwB,EACRvB,OAAQwB,EACRxF,MAAOE,EAAIuD,GAAKC,QAElB0B,EAAuBE,EAAW7B,EAAKvD,EAAIuD,GAAKuB,IAAK7B,EAAOC,GAC5DM,MAzBN+B,CAAiBhB,EAAYtB,EAAOC,GA8B7B,CAAED,QAAOC,S,SCxPHsC,E,8EAAf,WAAiCC,GAAjC,iBAAAvE,EAAA,+EAE2BC,MAAMsE,GAFjC,cAEUC,EAFV,gBAGyBA,EAASrE,OAHlC,cAGUsE,EAHV,yBAIWA,EAAOrE,SAJlB,kCAMIsE,QAAQC,IAAR,MANJ,2D,sBAUA,SAASC,EAAexG,GACtB,OAAO,YAAM,IAAIyG,IAAIzG,IAEvB,SAAS0G,EAAmBxG,GAC1B,IAAMyG,EAAc,GAOpB,OANAzG,EAAU0G,SAAQ,SAAA3G,GAChB,IAAMgE,EAAMhE,EAAQU,KAChBgG,EAAY1C,KACd0C,EAAY1C,GAAOhE,MAGhB4G,OAAOC,OAAOH,G,aCVjBI,EAAOvH,IAAOwH,KAAV,6HAuEKC,EAhEH,WACV,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAU,uCAAG,oCAAA3F,EAAA,sEACEsE,EAAkB5E,GADpB,OACXP,EADW,OAEXf,EAAQwG,EAAezF,EAAKL,KAAI,SAAC+B,GAAD,OAAUA,EAAK1C,SAAOyH,MAC1D,SAAC5F,EAAG6F,GAAJ,OAAUA,EAAI7F,KAEV1B,EALW,CAMfqB,GANe,mBAOZmF,EACD3F,EAAKL,KAAI,SAAC+B,GAAD,MAAW,CAClB9B,KAAM8B,EAAK9B,KACXL,KAAMmC,EAAKiF,gBAKX3H,EAAOC,EAAM,GACbC,EAAUC,EAAU,GAAGS,KAG7ByG,EAAS,CACPpH,QACAE,YACAH,OACAE,UACAE,cAAc,IAEhBmH,GAAa,GA1BI,2CAAH,qDA6BhBK,oBAAUJ,EAAY,IAQtB,OACE,eAACR,EAAD,CAAMa,UAAU,MAAhB,UACE,kFACCP,GAAa,cAAC,EAAD,IACbF,GAAS,qCACR,cAAC,EAAD,CACEpH,KAAMoH,EAAMpH,KACZE,QAASkH,EAAMlH,QACfE,aAAcgH,EAAMhH,eAEtB,cAAC,EAAD,CACEJ,KAAMoH,EAAMpH,KACZE,QAASkH,EAAMlH,QACfD,MAAOmH,EAAMnH,MACbE,UAAWiH,EAAMjH,UACjBC,aAAcgH,EAAMhH,aACpBC,cAtBkB,SAAC,GAAc,IAAboE,EAAY,EAAZA,OACpBhE,EAAwB,aAAhBgE,EAAO5D,KAAsB4D,EAAO3D,QAAU2D,EAAOhE,MAC7DF,EAAOkE,EAAOlE,KACpB8G,GAAS,SAAAS,GAAS,kCAASA,GAAT,eAA0BvH,EAAOE,iBCpDjDsH,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAC,EAAD,IAASJ,K","file":"static/js/main.29e7f231.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Loading = () => (\n  <div\n    style={{\n      backgroundColor: \"rgba(255, 255, 255, 0.7)\",\n      position: \"fixed\",\n      top: \"0\",\n      left: \"0\",\n      width: \"100%\",\n      height: \"100%\",\n      zIndex: 9999\n    }}\n  >\n    <div\n      style={{\n        position: \"absolute\",\n        top: \"49%\",\n        left: \"45%\",\n        fontFamily: \"Lato\",\n        fontSize: \"2em\"\n      }}\n    >\n      Loading...\n    </div>\n  </div>\n);\n\nexport default Loading;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst Space = styled.div`\n  margin-left: 15px;\n`;\nconst Spacespan = styled.span`\n  margin-left: 5px;\n`;\n\nconst QueryParams = ({\n  year,\n  years,\n  country,\n  countries,\n  shouldFilter,\n  onQueryChange\n}) => (\n  <Form>\n      <label htmlFor=\"year\">\n        Year\n        <Spacespan />\n        <select name=\"year\" id=\"year\" value={year} onChange={onQueryChange}>\n          {years.map(year => (\n            <option key={year} value={year}>\n              {year}\n            </option>\n          ))}\n        </select>\n      </label>\n    <Space />\n      <label htmlFor=\"country\">\n        Country\n        <Spacespan />\n        <select name=\"country\" id=\"country\" value={country} onChange={onQueryChange}>\n          {countries.map(country => (\n            <option key={country.iso3} value={country.iso3}>\n              {country.name}\n            </option>\n          ))}\n        </select>\n      </label>\n    <Space />\n      <label htmlFor=\"shouldFilter\">\n        Reduce Details\n        <Spacespan />\n        <input\n          name=\"shouldFilter\"\n          id=\"shouldFilter\"\n          type=\"checkbox\"\n          checked={shouldFilter}\n          onChange={onQueryChange}\n        />\n      </label>\n  </Form>\n);\n\nexport default QueryParams;","import React from \"react\";\nimport { ResponsiveSankey } from \"@nivo/sankey\";\n\nconst Sankey = ({ data }) => (\n  <ResponsiveSankey\n    data={data}\n    colors={[\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\"]}\n    nodeThickness=\"5\"\n    margin={{\n      top: 10,\n      right: 10,\n      bottom: 20,\n      left: 10\n    }}\n    align=\"justify\"\n  />\n);\n\nexport default Sankey;","\nexport const IDMC_COUNTRY_YEAR_DATA_URL = \"https://api.idmcdb.org/api/disaster_data?&ci=IDMCWSHSOLO009\";\n\nexport const get_IDMC_DISASTER_BY_YEAR_DATA_URL = (year) => `${IDMC_COUNTRY_YEAR_DATA_URL}&year=${year}`;\n\nexport const ALL_COUNTRY_MARKER = {iso3: \"all\", name: \"All\"};\n","import React from \"react\";\nimport Sankey from \"./Sankey\";\nimport styled from \"styled-components\";\n\nimport Loading from \"./Loading\";\n\nimport {\n  get_IDMC_DISASTER_BY_YEAR_DATA_URL,\n  ALL_COUNTRY_MARKER\n} from \"./config\";\n\nconst SankeyDiv = styled.div`\n  width: 90vw;\n  height: 600px;\n  margin-bottom: 30px;\n  border: 1px solid black;\n`;\nexport default class SankeyContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      isDataEmpty: true,\n      shouldRefreshData: true,\n      cache: [],\n      data: []\n    };\n    this.fetchData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevProps.year !== this.props.year) {\n      await this.fetchData();\n    }\n    if (\n      this.state.shouldRefreshData ||\n      prevProps.country !== this.props.country\n    ) {\n      await this.setComponentData();\n    }\n  }\n\n  fetchData = async () => {\n    const resp = await fetch(\n      get_IDMC_DISASTER_BY_YEAR_DATA_URL(this.props.year)\n    );\n    const { results } = await resp.json();\n    await new Promise(resolve => {\n      this.setState({ cache: results, shouldRefreshData: true }, resolve);\n    });\n  };\n\n  setComponentData = async () => {\n    let data =\n      this.props.country !== ALL_COUNTRY_MARKER.iso3\n        ? filterByCountry(this.state.cache, this.props.country)\n        : this.state.cache;\n\n    data = data.filter(isValidData);\n\n    const newState = {\n      isDataEmpty: data.length === 0,\n      shouldRefreshData: false,\n      loading: false,\n      data\n    };\n\n    await new Promise(resolve => {\n      this.setState(newState, resolve);\n    });\n\n    function filterByCountry(data, country) {\n      return data.filter(byCountry);\n\n      function byCountry(item) {\n        return item.iso3 === country;\n      }\n    }\n\n    function isValidData(item) {\n      // Filter for Germany 2010 with new_displacements 0 value\n      // Filter for All 2009 with undefined new_displacements\n      // Filter for undefined hazard_category\n      return (\n        item.new_displacements !== undefined &&\n        item.new_displacements !== 0 &&\n        item.hazard_category !== undefined\n      );\n    }\n  };\n\n  render() {\n    if (this.state.loading) {\n      return <Loading/>;\n    }\n    if (this.state.isDataEmpty) {\n      return (\n        <h3>\n          No data for this year and country combination. Choose another one!\n        </h3>\n      );\n    }\n    return (\n      <SankeyDiv>\n        <Sankey\n          data={replaceIdsWithSpaces(\n            hideLeaves(\n            prepareData(this.state.data),\n            this.props.shouldFilter\n          ))}\n        />\n      </SankeyDiv>\n    );\n  }\n}\n\nfunction replaceIdsWithSpaces({nodes, links}) {\n  let keys = {};\n  let cache = {};\n  let newNodes = nodes.map(padSpaces);\n  let newLinks = links.map(padSpaces2);\n\n  return {nodes: newNodes, links: newLinks};\n\n  function padSpaces(item) {\n    let id = item[\"id\"];\n    let name = id.substr(id.indexOf(\" \") + 1);\n    let spaceCount = getSpaceCount(name, keys);\n    let newId = \" \".repeat(spaceCount) + name;\n    cache[id] = newId;\n    return {\"id\": newId};\n  }\n\n  function getSpaceCount(key, keys) {\n    let count = keys.hasOwnProperty(key) ? keys[key] + 1 : 0;\n    keys[key] = count;\n    return count;\n  }\n\n  function padSpaces2(item) {\n    let {source, target, value} = item;\n    let newSource = cache[source];\n    let newTarget = cache[target];\n    return {source: newSource, target: newTarget, value};\n  }\n}\n\nfunction hideLeaves(data, shouldFilter) {\n  if (!shouldFilter) {\n    return data;\n  }\n\n  const { nodes, links } = data;\n  return { nodes: nodes.filter(isLeafNode), links: links.filter(isLeafLink) };\n\n  function isLeafNode(item) {\n    // filter out patterns like \"0.0.0.2 Riverine flood\"\n    const string = item.id;\n    const pattern = /^\\d\\.\\d\\.\\d\\.\\d/;\n    return !pattern.test(string);\n  }\n\n  function isLeafLink(item) {\n    // filter out patterns like \"0.0.0.2 Riverine flood\"\n    const string = item.target;\n    const pattern = /^\\d\\.\\d\\.\\d\\.\\d/;\n    return !pattern.test(string);\n  }\n}\n\nfunction prepareData(dataIn) {\n  const data = dataIn.map(requiredAttributes);\n\n  function requiredAttributes(item) {\n    return {\n      hazard_category: item.hazard_category,\n      hazard_sub_category: item.hazard_sub_category,\n      hazard_type: item.hazard_type,\n      hazard_sub_type: item.hazard_sub_type,\n      new_displacements: item.new_displacements\n    };\n  }\n\n  const categories = {};\n\n  for (let obj of data) {\n    let sub_categories = accumulate(\n      categories,\n      obj.hazard_category,\n      obj.new_displacements\n    );\n\n    let types = accumulate(\n      sub_categories,\n      obj.hazard_sub_category,\n      obj.new_displacements\n    );\n\n    let sub_types = accumulate(types, obj.hazard_type, obj.new_displacements);\n\n    if (obj.hazard_sub_type !== undefined) {\n      accumulate(sub_types, obj.hazard_sub_type, obj.new_displacements);\n    }\n  }\n\n  function accumulate(map, key, increment) {\n    let { count, sub } = map.hasOwnProperty(key)\n      ? map[key]\n      : { count: 0, sub: {} };\n    let newCount = count + increment;\n    map[key] = { count: newCount, sub };\n    return sub;\n  }\n\n  //printObject(categories);\n\n  const nodes = [];\n  const links = [];\n  getNodesandLinks(categories, nodes, links);\n\n  function getNodesandLinks(map, nodes, links) {\n    let count = 0;\n    for (let key in map) {\n      let label = `${count} ${key}`;\n      nodes.push({ id: label });\n      getNodesandLinksDeeper(count, key, map[key].sub, nodes, links);\n      count++;\n    }\n    function getNodesandLinksDeeper(prefix, top, map, nodes, links) {\n      let count = 0;\n      for (let key in map) {\n        let prefixNew = prefix + \".\" + count;\n        let label = `${prefixNew} ${key}`;\n        nodes.push({ id: label });\n\n        let label1 = `${prefix} ${top}`;\n        let label2 = `${prefixNew} ${key}`;\n        links.push({\n          source: label1,\n          target: label2,\n          value: map[key].count\n        });\n        getNodesandLinksDeeper(prefixNew, key, map[key].sub, nodes, links);\n        count++;\n      }\n    }\n  }\n\n  return { nodes, links };\n}\n","async function getCountriesYears(url) {\n  try {\n    const response = await fetch(url);\n    const result = await response.json();\n    return result.results;\n  } catch (error) {\n    console.log(error);\n  }\n\n}\nfunction getUniqueYears(years) {\n  return [ ... new Set(years)];\n}\nfunction getUniqueCountries(countries) {\n  const uniqueIso3s = {};\n  countries.forEach(country => {\n    const key = country.iso3;\n    if(!uniqueIso3s[key]) {\n      uniqueIso3s[key] = country;\n    }\n  });\n  return Object.values(uniqueIso3s);  \n}\n\nexport {getCountriesYears, getUniqueYears, getUniqueCountries};\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Loading from \"./Loading\";\nimport QueryParams from \"./QueryParams\";\nimport SankeyContainer from \"./SankeyContainer\";\n\nimport { IDMC_COUNTRY_YEAR_DATA_URL, ALL_COUNTRY_MARKER } from \"./config\";\nimport { getCountriesYears, getUniqueYears, getUniqueCountries } from \"./utils\";\n\nimport \"./styles.css\";\n\nconst Main = styled.main`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst App = () => {\n  const [query, setQuery] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  const initialize = async () => {\n    const data = await getCountriesYears(IDMC_COUNTRY_YEAR_DATA_URL);\n    const years = getUniqueYears(data.map((item) => item.year)).sort(\n      (a, b) => b - a\n    );\n    const countries = [\n      ALL_COUNTRY_MARKER,\n      ...getUniqueCountries(\n        data.map((item) => ({\n          iso3: item.iso3,\n          name: item.geo_name,\n        }))\n      ),\n    ];\n\n    const year = years[0];\n    const country = countries[0].iso3;\n\n    // Set the default values:\n    setQuery({\n      years,\n      countries,\n      year,\n      country,\n      shouldFilter: false,\n    });\n    setIsLoading(false);\n  };\n\n  useEffect(initialize, []);\n\n  const handleQueryChange = ({target}) => {\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    setQuery(prevQuery => ({...prevQuery, ...{ [name]: value }}));\n  };\n\n  return (\n    <Main className=\"App\">\n      <h3>Sankey diagram for disasters by year and country</h3>\n      {isLoading && <Loading />}\n      {query && <>\n        <SankeyContainer\n          year={query.year}\n          country={query.country}\n          shouldFilter={query.shouldFilter}\n        />\n        <QueryParams\n          year={query.year}\n          country={query.country}\n          years={query.years}\n          countries={query.countries}\n          shouldFilter={query.shouldFilter}\n          onQueryChange={handleQueryChange}\n        />\n      </>}\n    </Main>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}